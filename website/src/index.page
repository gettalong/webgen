---
title: Home
routed_title: Home
in_menu: true
sort_info: 10
---
## Welcome to the homepage of _webgen_!

webgen is a *free* (GPL-licensed) command line application for generating static websites. You could
write a static website by hand, of course. But by using webgen you have several advantages:

* **The page layout is separated from the content**: if you change the layout, all pages that use
  that layout are automatically updated. You can have any number of different layouts and even
  nested ones.

* **Write content in a markup language**: The content and layout files can be written in a markup
    language like Markdown, Textile or Haml which lets you concentrate more on what you write.

* **Automation**: webgen can automatically generate, for example, menus and breadcrumb trails for
    you.

* **Dynamic content**: It is easy to add some dynamic content if there is a need for it.

* **Self-Contained websites**: webgen websites are self contained since all generated links are
    relative ones. This allows to preview a generated site without a web server!

The above list should just give you a glimpse of what is possible with webgen. Have a look at the
[features page]({relocatable: features.html}) for a more complete list and a feature comparison to
other static website generators.

Although webgen is very powerful it is also very easy to use. A basic website can be created in just
one step by executing `webgen create mywebsite`. This command will create the directory `mywebsite`
which houses the newly created webgen website and some content files to start with. By running the
command `webgen` inside the `mywebsite` directory, the website will be generated and put into the
`out` directory where it can be viewed with any browser.

Actually, this website was generated with webgen and provides an online demonstration of its
features. For example, the menu that you can see at the top was created dynamically. For more
information have a look at the [documentation]({relocatable: /documentation/})!


## Feature requests, bugs, ...

If you have an idea for a new feature for webgen, [request it][feature_request]. If you have found a
bug, you should [report it here][bug_report]. Also, there are [forums][forum] and [mailing
lists][ml] available (the mailing list is mirrored to the [webgen-users google group][google-group])
if you have any questions! You can also visit the IRC channel `#webgen` on Freenode where I can be
found whenever I'm online.

[feature_request]: http://rubyforge.org/tracker/?atid=1210&group_id=296&func=browse
[bug_report]: http://rubyforge.org/tracker/?atid=1207&group_id=296&func=browse
[forum]: http://rubyforge.org/forum/?group_id=296
[ml]: http://rubyforge.org/mail/?group_id=296
[google-group]: http://groups.google.com/group/webgen-users/

## Download & Installation

There are currently two versions of webgen:

* The 0.4.x series: This is the stable series which should generally be used. It provides many
  features out of the box and is very user friendly. The complete documentation (including
  installation information and needed libraries) for the current version of the 0.4.x series can be
  found [here](documentation/0.4.x/index.html).

* The 0.5.x series: The current development series. A completely new implementation of the core
  allows for advanced features like partial site regeneration but this series is currently not
  nearly as feature rich as the stable series.

webgen should run on any platform which supports Ruby. It has been successfully tested on the
following platforms:

* Linux with Ruby 1.8.6
* Mac OSX with Ruby 1.8.6
* Windows XP with latest Ruby 1.8.6

Furthermore, webgen should also run on jruby 1.1.3 and ruby 1.9.0 but that has not been extensively
tested.

webgen uses git as its versioning system and webgen's repository is hosted primarily on Rubyforge
but I have also created a clone of it on GitHub. The repositories always contains a clean state of
the current development version of webgen, i.e. webgen should always work when checked out from the
repository. To check out webgen use one of the following commands:

     git clone git://rubyforge.org/webgen.git
     git clone git://github.com/gettalong/webgen.git

### Using Rubygems

If you are using Rubygems, installing the latest version of webgen is as simple as executing `gem
install webgen` (or, if you want the current stable version, just use `gem install webgen -v '<
0.5.0'`). After this command has finished, everything is ready for creating websites. Be sure to
have a look at the optional dependencies which provide additional functionality.

### Manual Installation

The latest version of webgen can always be downloaded from [webgen's files section on
Rubyforge](http://rubyforge.org/frs/?group_id=296). After the download the package needs to be
decompressed and then you can install webgen using the included `setup.rb` installation method:

    $ ruby setup.rb config
    $ ruby setup.rb setup
    $ ruby setup.rb install

Make sure that you also install the mandatory and, if you need them, the optional dependencies.

### Dependencies

* (mandatory) [cmdparse](http://cmdparse.rubyforge.org) version 2.0.0 or higher

* (mandatory) [facets](http://facets.rubyforge.org) version 2.4.3 or higher

* (mandatory) [maruku](http://maruku.rubyforge.org) version 0.5.5 or higher

* (mandatory for webgui) [ramaze](http://ramaze.net) version 2008.06

* (mandatory for webgui) [launchy](http://copiousfreetime.rubyforge.org/launchy/) version 0.3.2 or
  higher

* (optional) [RedCloth](http://redcloth.rubyforge.org) version 2.0.10 or higher for Textile support

* (optional) [haml](http://haml.hamptoncatlin.com) version 2.0.1 or higher for haml and sass support

* (optional) [builder](http://builder.rubyforge.org) version 2.1.0 or higher for programmatic xml
  generation support

* (optional) [rdoc](http://rdoc.rubyforge.org/) version 2.0.0 for RDoc markup support

* (optional) [coderay](http://coderay.rubychan.de/) version 0.7.4.214 or higher for syntax
  highlighting

* (optional) [feedtools](http://sporkmonger.com/projects/feedtools) version 0.2.29 for built-in feed
  generation support

All these libraries can be installed via Rubygems (which I recommend). If you want to install all
optional dependencies when installing webgen via Rubygems, install webgen using the `--development`
option.

## Author

* Thomas Leitner
* e-Mail: <t_leitner@gmx.at>
* GPG Key-Id: 0xB2D0A854
