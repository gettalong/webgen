---
title: Features
in_menu: true
sort_info: 20
---
# Feature list

Below is a list of features that webgen supports or will shortly support.

*   ## webgen core features

    The following list shows general benefits of using webgen:

    * **Fast** (only the necessary files are regenerated)
    * **Easy to install and use**
    * Runs on Linux, Mac OS X, Windows
    * Extendable by writing add-ons in Ruby
    * Easy to configure if one needs to (no need if you are happy with the default values)
    * Command line interface uses command style syntax (like Subversion's `svn` command)

*   ## Supported content formats/markup languages

    webgen content files can be written in a number of different content formats and new content
    formats can be easily added. Currently webgen supports:

    * **Markdown** (including special syntax like setting header ids and html attributes through the Maruku
      library)
    * **Textile**
    * **Haml and Sass**
    * RDoc (the native API documentation format for Ruby)
    * Builder (tool for programatically creating XML documents)
    * Smiley-to-emoticon conversion
    * Plain text

*   ## Supported file types

    Anything can be put into webgen's source directory sothat it gets copied to the output directory
    but some file types are handled specially:

    * Page files (primarily used to define the content of a web page but can really be used to
      create about any text-based file format)
    * Template files (used to define the general layout of a web page, these are chainable/nestable)
    * Gallery files (you create one such file and get a whole image gallery for free, including
      goodies like EXIF information extraction and automatic thumbnail creation)
    * Sipttra files (files using a simple text-based feature/request tracking format)

*   ## Dynamic content

    Although webgen is used to create a finally static website, it allows one to embed dynamic parts
    in page and template files to support features like dynamic menu generation, dynamic link
    generation and more. The following methods for adding dynamic content are supported:

    * **webgen tags**: these allow non-programmers to easily add dynamic content using a simple markup
      syntax. webgen ships with many tag plugins for
      * **generating menus and breadcrumb trails**
      * listing all translations of a page
      * **syntax highlighting code** fragments or entire files
      * and much more
    * **ERB** (embedded Ruby) for custom scripts embedded into content files for advanced users.

*   ## Other features

    Additionally to the above webgen provides other useful features like:

    * Meta information can be specified for every file (e.g. title, menu ordering information, ...)
    * Support for specifying 'virtual files and directories' (can be used, for example, to include
      links to external pages in the menu)
    * Generated HTML files can be automatically checked if they are standard conform
